(()=>{"use strict";class t{constructor(t){this._url=t}async getPhotographers(){return fetch(this._url).then((t=>t.json())).then((t=>t.photographers)).catch((t=>console.log("La requete api getPhotographer a échoué : ",t)))}async getPhotographerById(t){try{const e=await fetch(this._url);return(await e.json()).photographers.filter((e=>e.id===t))[0]}catch(t){return console.log("La requete api getPhotographerById a échoué : ",t),null}}async getPortfolioByUserId(t){return fetch(this._url).then((t=>t.json())).then((e=>e.media.filter((e=>e.photographerId===t)))).catch((t=>console.log("La requete api getPortfolioById a échoué : ",t)))}}class e{constructor(t){this._id=t.id,this._photographerId=t.photographerId,this._title=t.title,this._likes=t.likes,this._date=t.date,this._price=t.price,this._description=t.description,this._globalLikes=297081}get id(){return this._id}get photographeId(){return this._photographeId}get title(){return this._title}get likes(){return this._likes}get date(){return this._date}get price(){return this._price}get description(){return this._description}get globalLikes(){return this._globalLikes}}class r extends e{constructor(t){super(t),this._type="image",this._image=t.image,this._imagePath=`assets/images/${t.photographerId}/${this._image}`,this._format="img",this._icon="fa-magnifying-glass"}get path(){return this._imagePath}get image(){return this._image}get type(){return this._type}get icon(){return this._icon}get format(){return this._format}}class a extends e{constructor(t){super(t),this._type="video",this._video=t.video,this._videoPath=`assets/images/${t.photographerId}/${this._video}`,this._format="video",this._icon="fa-circle-play"}get path(){return this._videoPath}get video(){return this._video}get type(){return this._type}get icon(){return this._icon}get format(){return this._format}}class i{constructor(t){if(t.image)return new r(t);if(t.video)return new a(t);throw"Unknown format type"}}class o{constructor(t){this._name=t.name,this._id=t.id,this._city=t.city,this._country=t.country,this._tagline=t.tagline,this._price=t.price,this._portrait=t.portrait,this._portfolio=[],this._cardPhotographer=null,this._cardPortfolio=null,this._cardModal=null,this._cardFilter=null}get name(){return this._name}get id(){return this._id}get city(){return this._city}get country(){return this._country}get tagline(){return this._tagline}get price(){return this._price}get portrait(){return`/assets/photographers/${this._portrait}`}get cardPhotographer(){return this._cardPhotographer}get cardPortfolio(){return this._cardPortfolio}get cardModal(){return this._cardModal}get cardFilter(){return this._cardFilter}get portfolio(){return this._portfolio}get cardPhotographer(){return this._cardPhotographer}get cardPortfolio(){return this._cardPortfolio}set portfolio(t){this._portfolio=t}set cardPhotographer(t){this._templatePhotographer=t}set cardPortfolio(t){this._cardPortfolio=t}}class s{constructor(t){this._photographer=t,this._wrapperHeader=document.createElement("div"),this._wrapperHeader.classList.add("media-card-wrapper"),this._wrapperContact=document.createElement("div"),this._wrapperContact.classList.add("contact-card-wrapper")}get photographer(){return this._photographer}createMediaCardHeader(){const t=`\n    <div class="info-section">\n      <h1>${this._photographer.name}</h1>\n      <p class="local-header">${this._photographer.city}, ${this._photographer.country}</p>\n      <p class="tagline-header">${this._photographer.tagline}</p>\n    </div>\n    <div class="button-section">\n      <button class="contact_button" aria-label="contact me">Contactez-moi</button>\n    </div>\n    <div class="image-header-section">\n      <img class="img-header" src="${this._photographer.portrait}" alt="${this._photographer.name}">\n    </div>`;return this._wrapperHeader.innerHTML=t,this._wrapperHeader}createContactCard(){const t=`\n    <div class="modal">\n    <header>\n      <h2>Contactez-moi ${this._photographer.name}</h2>\n      <img src="../assets/icons/close.svg" class="btnClose" alt="Close"/>\n    </header>\n    <form>\n      <div>\n        <label for="firstname" type="text">Prénom</label>\n        <input type="text" id="firstname" name="firstname"/>\n      </div>\n      <div>\n        <label for="lastname" type="text">Nom</label>\n        <input type="text" id="lastname" name="lastname"/>\n      </div>\n      <div>\n        <label for="email" type="email">Email</label>\n        <input type="email" id="email" name="email"/>\n      </div>\n      <div>\n        <label for="text" type="text">Votre message</label>\n        <input type="text" id="text" name="text"/>\n      </div>\n      <button class="contact_button">Envoyer</button>\n    </form>\n  </div>\n    \n    `;return this._wrapperContact.innerHTML=t,this._wrapperContact}}class n{constructor(t){this._media=t,this.$wrapperCard=null,this.$wrapperSticky=null}get mediaHtmlElement(){return this.$wrapperCard}createCardMedia(t){this.$wrapperCard=document.createElement("div"),this.$wrapperCard.classList.add("media-card"),this.$wrapperCard.classList.add(`media-card--${this._media.type}`);const e=`         \n      <a href="${this._media.path}" class="media-card-cover" aria-label="${this._media.description}, agrandir l'image">          \n        <${this._media.format} src="${this._media.path}" alt="${this._media.description}, ${this._media.type}"/>\n      </a> \n      <div class="media-card-content">\n        <h2 class="media-card-content-title" tabindex="0">${this._media.title}</h2>\n        <div class="media-card-content-like favorite">\n          <label id="like-${this._media.id}" for="like-${this._media.id}-input" class="favorite-counter">${this._media.likes} </label>\n          <span><i class="fa fa-solid fa-heart fa-sm" arial-label="likes"></i></span>\n          <input id="like-${this._media.id}-input" aria-label="${this._media.likes} j'aimes" class="favorite-input" type="checkbox"/>\n        </div>\n      </div>\n    `;return this.$wrapperCard.innerHTML=e,this.$wrapperCard}}class h{constructor(t){this._photographer=t,this._wrapper=document.createElement("div"),this._wrapper.classList.add("photographer-card-wrapper")}get photographer(){return this._photographer}createPhotographerCard(){const t=`\n      <article>\n        <a href="photographer.html?id=${this._photographer.id}" id="${this._photographer.id}" class="link" alt="page de ${this._photographer.name}">\n          <img src="${this._photographer.portrait}" alt="${this._photographer.name}" class="image">\n          <h2>${this._photographer.name}</h2>\n        <p class="location">${this._photographer.city}, ${this._photographer.country}</p>\n        <p class="slogan">${this._photographer.tagline}</p>\n        <p class="price">${this._photographer.price}€/jour</p>\n        </a>  \n      </article>\n      `;return this._wrapper.innerHTML=t,this._wrapper}}class c{constructor(t,e){this._photographer=t,this._media=e}get photographer(){return this._photographer}get media(){return this._media}createCardSticky(t,e){this.$wrapperSticky=document.createElement("div"),this.$wrapperSticky.classList.add("sticky-card"),console.log(this._media);const r=`\n    <span class="globalLikes">${this._media.globalLikes}</span>\n    <span><i class="fa fa-solid fa-heart fa-sm" arial-label="likes"></i></span>\n    <span class="price">${this._photographer.price}€ / jour</span>\n    `;return this.$wrapperSticky.innerHTML=r,this.$wrapperSticky}}!async function(){const r=document.querySelector(".photographer_wrapper"),a=document.querySelector(".profil"),p=document.querySelector(".contact_modal"),d=document.querySelector(".portfolio"),l=document.querySelector(".sticky");if(r){const e=new t("../data/photographers.json"),a=await e.getPhotographers(),i=[];a.forEach((t=>{const e=new o(t);i.push(e)})),i.forEach((t=>{const e=new h(t);r.appendChild(e.createPhotographerCard())}))}else{const r=new t("../data/photographers.json"),h=window.location.search,g=new URLSearchParams(h),_=parseInt(g.get("id")),u=await r.getPhotographerById(_),m=(await r.getPortfolioByUserId(_)).map((t=>new i(t))),y=new o(u);y.headerMediaCard=new s(y),a.appendChild(y.headerMediaCard.createMediaCardHeader());const f=new e(m);m.forEach((t=>{const e=new n(t);d.appendChild(e.createCardMedia())})),p.appendChild(y.headerMediaCard.createContactCard());const w=document.querySelector(".contact_button"),$=document.querySelector(".contact_modal"),v=document.querySelector(".btnClose");w.addEventListener("click",(()=>{$.style.display="block"})),v.addEventListener("click",(()=>{$.style.display="none"}));const C=new c(y,f);l.appendChild(C.createCardSticky())}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkgsRUFBV0MsaUJBQWlCLFNBQVMsS0FDcENGLEVBQWFHLE1BQU1DLFFBQVUsVUFJOUIsTUFBTUMsRUFBaUIsSUFBSWxDLEVBQWdCdEYsRUFBY0UsR0FDekQ0RixFQUFlSyxZQUFZcUIsRUFBZWpDLHFCQTFGNUNrQyxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvamV0LTYvLi9qcy9hcGkvQXBpLmpzIiwid2VicGFjazovL3Byb2pldC02Ly4vanMvTW9kZWxzL01lZGlhTW9kZWwuanMiLCJ3ZWJwYWNrOi8vcHJvamV0LTYvLi9qcy9mYWN0b3JpZXMvTWVkaWFzRmFjdG9yeS5qcyIsIndlYnBhY2s6Ly9wcm9qZXQtNi8uL2pzL01vZGVscy9QaG90b2dyYXBoZXJNb2RlbC5qcyIsIndlYnBhY2s6Ly9wcm9qZXQtNi8uL2pzL3RlbXBsYXRlcy9NZWRpYUNhcmRIZWFkZXIuanMiLCJ3ZWJwYWNrOi8vcHJvamV0LTYvLi9qcy90ZW1wbGF0ZXMvTWVkaWFDYXJkSW1nVmlkLmpzIiwid2VicGFjazovL3Byb2pldC02Ly4vanMvdGVtcGxhdGVzL1Bob3RvZ3JhcGhlckNhcmQuanMiLCJ3ZWJwYWNrOi8vcHJvamV0LTYvLi9qcy90ZW1wbGF0ZXMvTWVkaWFDYXJkU3RpY2t5LmpzIiwid2VicGFjazovL3Byb2pldC02Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG5cdGNvbnN0cnVjdG9yKHVybCkge1xuXHRcdHRoaXMuX3VybCA9IHVybFxuXHR9XG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuICBhc3luYyBnZXRQaG90b2dyYXBoZXJzICgpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fdXJsKVxuICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG4gICAgICAudGhlbihyZXMgPT4gcmVzLnBob3RvZ3JhcGhlcnMpXG4gICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKCdMYSByZXF1ZXRlIGFwaSBnZXRQaG90b2dyYXBoZXIgYSDDqWNob3XDqSA6ICcsIGVycikpXG4gIH1cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdGFzeW5jIGdldFBob3RvZ3JhcGhlckJ5SWQgKHVzZXJJZCkge1xuXG5cdFx0dHJ5IHtcblxuXHRcdFx0Y29uc3QgcmVzcG9uc2VBcGkgPSBhd2FpdCBmZXRjaCh0aGlzLl91cmwpXG5cdFx0XHQvLyBjb25zb2xlLmxvZyhyZXNwb25zZUFwaSlcblx0XHRcdGNvbnN0IHJlc3BvbnNlSlNPTiA9IGF3YWl0IHJlc3BvbnNlQXBpLmpzb24oKVxuXHRcdFx0Ly8gY29uc29sZS5sb2cocmVzcG9uc2VKU09OKVxuXHRcdFx0Y29uc3QgcGhvdG9ncmFwaGVyID0gcmVzcG9uc2VKU09OLnBob3RvZ3JhcGhlcnMuZmlsdGVyKHBob3RvZ3JhcGhlciA9PiBwaG90b2dyYXBoZXIuaWQgPT09IHVzZXJJZClbMF1cblx0XHRcdC8vIGNvbnNvbGUubG9nKHBob3RvZ3JhcGhlcilcblx0XHRcdHJldHVybiBwaG90b2dyYXBoZXJcblxuXHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0XHRjb25zb2xlLmxvZygnTGEgcmVxdWV0ZSBhcGkgZ2V0UGhvdG9ncmFwaGVyQnlJZCBhIMOpY2hvdcOpIDogJywgZXJyKVxuXHRcdFx0cmV0dXJuIG51bGxcblx0XHR9XG5cbiAgfVxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblx0YXN5bmMgZ2V0UG9ydGZvbGlvQnlVc2VySWQgKHVzZXJJZCkge1xuXHRcdFx0cmV0dXJuIGZldGNoKHRoaXMuX3VybClcblx0XHRcdFx0LnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXG5cdFx0XHRcdC50aGVuKHJlcyA9PiB7cmV0dXJuIHJlcy5tZWRpYS5maWx0ZXIobWVkaWEgPT4gbWVkaWEucGhvdG9ncmFwaGVySWQgPT09IHVzZXJJZCl9KVx0XHRcdFx0XG5cdFx0XHRcdC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coJ0xhIHJlcXVldGUgYXBpIGdldFBvcnRmb2xpb0J5SWQgYSDDqWNob3XDqSA6ICcsIGVycikpXG5cdFx0fVxuXHR9IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWFNb2RlbCB7XG5cdGNvbnN0cnVjdG9yKGRhdGEpIHtcblx0XHR0aGlzLl9pZCA9IGRhdGEuaWQ7XG5cdFx0dGhpcy5fcGhvdG9ncmFwaGVySWQgPSBkYXRhLnBob3RvZ3JhcGhlcklkO1xuXHRcdHRoaXMuX3RpdGxlID0gZGF0YS50aXRsZTtcblx0XHR0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XG5cdFx0dGhpcy5fZGF0ZSA9IGRhdGEuZGF0ZTtcblx0XHR0aGlzLl9wcmljZSA9IGRhdGEucHJpY2U7XG5cdFx0dGhpcy5fZGVzY3JpcHRpb24gPSBkYXRhLmRlc2NyaXB0aW9uO1xuXHRcdHRoaXMuX2dsb2JhbExpa2VzID0gMjk3MDgxO1xuXHR9XG5cblx0Z2V0IGlkKCkge1xuXHRcdHJldHVybiB0aGlzLl9pZDtcblx0fVxuXG5cdGdldCBwaG90b2dyYXBoZUlkKCkge1xuXHRcdHJldHVybiB0aGlzLl9waG90b2dyYXBoZUlkO1xuXHR9XG5cblx0Z2V0IHRpdGxlKCkge1xuXHRcdHJldHVybiB0aGlzLl90aXRsZTtcblx0fVxuXG5cdGdldCBsaWtlcygpIHtcblx0XHRyZXR1cm4gdGhpcy5fbGlrZXM7XG5cdH1cblxuXHRnZXQgZGF0ZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fZGF0ZTtcblx0fVxuXG5cdGdldCBwcmljZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fcHJpY2U7XG5cdH1cblxuXHRnZXQgZGVzY3JpcHRpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2Rlc2NyaXB0aW9uO1xuXHR9XG5cblx0Z2V0IGdsb2JhbExpa2VzKCkge1xuXHRcdHJldHVybiB0aGlzLl9nbG9iYWxMaWtlcztcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgUGljdHVyZSBleHRlbmRzIE1lZGlhTW9kZWwge1xuXHRjb25zdHJ1Y3RvcihkYXRhKSB7XG5cdFx0c3VwZXIoZGF0YSk7XG5cdFx0dGhpcy5fdHlwZSA9IFwiaW1hZ2VcIjtcblx0XHR0aGlzLl9pbWFnZSA9IGRhdGEuaW1hZ2U7XG5cdFx0dGhpcy5faW1hZ2VQYXRoID0gYGFzc2V0cy9pbWFnZXMvJHtkYXRhLnBob3RvZ3JhcGhlcklkfS8ke3RoaXMuX2ltYWdlfWA7XG5cdFx0dGhpcy5fZm9ybWF0ID0gXCJpbWdcIjtcblx0XHR0aGlzLl9pY29uID0gXCJmYS1tYWduaWZ5aW5nLWdsYXNzXCI7XG5cdH1cblxuXHRnZXQgcGF0aCgpIHtcblx0XHRyZXR1cm4gdGhpcy5faW1hZ2VQYXRoO1xuXHR9XG5cblx0Z2V0IGltYWdlKCkge1xuXHRcdHJldHVybiB0aGlzLl9pbWFnZTtcblx0fVxuXG5cdGdldCB0eXBlKCkge1xuXHRcdHJldHVybiB0aGlzLl90eXBlO1xuXHR9XG5cblx0Z2V0IGljb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2ljb247XG5cdH1cblxuXHRnZXQgZm9ybWF0KCkge1xuXHRcdHJldHVybiB0aGlzLl9mb3JtYXQ7XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIFZpZGVvIGV4dGVuZHMgTWVkaWFNb2RlbCB7XG5cdGNvbnN0cnVjdG9yKGRhdGEpIHtcblx0XHRzdXBlcihkYXRhKTtcblx0XHR0aGlzLl90eXBlID0gXCJ2aWRlb1wiO1xuXHRcdHRoaXMuX3ZpZGVvID0gZGF0YS52aWRlbztcblx0XHR0aGlzLl92aWRlb1BhdGggPSBgYXNzZXRzL2ltYWdlcy8ke2RhdGEucGhvdG9ncmFwaGVySWR9LyR7dGhpcy5fdmlkZW99YDtcblx0XHR0aGlzLl9mb3JtYXQgPSBcInZpZGVvXCI7XG5cdFx0dGhpcy5faWNvbiA9IFwiZmEtY2lyY2xlLXBsYXlcIjtcblx0fVxuXG5cdGdldCBwYXRoKCkge1xuXHRcdHJldHVybiB0aGlzLl92aWRlb1BhdGg7XG5cdH1cblxuXHRnZXQgdmlkZW8oKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3ZpZGVvO1xuXHR9XG5cblx0Z2V0IHR5cGUoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3R5cGU7XG5cdH1cblxuXHRnZXQgaWNvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5faWNvbjtcblx0fVxuXG5cdGdldCBmb3JtYXQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2Zvcm1hdDtcblx0fVxufVxuIiwiaW1wb3J0IHsgUGljdHVyZSB9IGZyb20gJy4uL01vZGVscy9NZWRpYU1vZGVsJ1xuaW1wb3J0IHsgVmlkZW8gfSBmcm9tICcuLi9Nb2RlbHMvTWVkaWFNb2RlbCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWFzRmFjdG9yeSB7XG5cdGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICBpZiAoZGF0YS5pbWFnZSkge1xuICAgICAgLy8gY29uc29sZS5sb2coZGF0YS5pbWFnZSlcbiAgICAgICAgcmV0dXJuIG5ldyBQaWN0dXJlKGRhdGEpXG4gICAgfSBlbHNlIGlmIChkYXRhLnZpZGVvKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhkYXRhLnZpZGVvKVxuICAgICAgICByZXR1cm4gbmV3IFZpZGVvKGRhdGEpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93ICdVbmtub3duIGZvcm1hdCB0eXBlJ1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGhvdG9ncmFwaGVyTW9kZWwge1xuXHRjb25zdHJ1Y3RvcihkYXRhKSB7XG5cdFx0dGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcblx0XHR0aGlzLl9pZCA9IGRhdGEuaWQ7XG5cdFx0dGhpcy5fY2l0eSA9IGRhdGEuY2l0eTtcblx0XHR0aGlzLl9jb3VudHJ5ID0gZGF0YS5jb3VudHJ5O1xuXHRcdHRoaXMuX3RhZ2xpbmUgPSBkYXRhLnRhZ2xpbmU7XG5cdFx0dGhpcy5fcHJpY2UgPSBkYXRhLnByaWNlO1xuXHRcdHRoaXMuX3BvcnRyYWl0ID0gZGF0YS5wb3J0cmFpdDtcblx0XHR0aGlzLl9wb3J0Zm9saW8gPSBbXTtcblxuXHRcdHRoaXMuX2NhcmRQaG90b2dyYXBoZXIgPSBudWxsO1xuXHRcdHRoaXMuX2NhcmRQb3J0Zm9saW8gPSBudWxsO1xuXHRcdHRoaXMuX2NhcmRNb2RhbCA9IG51bGw7XG5cdFx0dGhpcy5fY2FyZEZpbHRlciA9IG51bGw7XG5cdH1cblxuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gZ2V0dGVycyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdGdldCBuYW1lKCkge1xuXHRcdHJldHVybiB0aGlzLl9uYW1lO1xuXHR9XG5cblx0Z2V0IGlkKCkge1xuXHRcdHJldHVybiB0aGlzLl9pZDtcblx0fVxuXG5cdGdldCBjaXR5KCkge1xuXHRcdHJldHVybiB0aGlzLl9jaXR5O1xuXHR9XG5cblx0Z2V0IGNvdW50cnkoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2NvdW50cnk7XG5cdH1cblxuXHRnZXQgdGFnbGluZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fdGFnbGluZTtcblx0fVxuXG5cdGdldCBwcmljZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fcHJpY2U7XG5cdH1cblxuXHRnZXQgcG9ydHJhaXQoKSB7XG5cdFx0cmV0dXJuIGAvYXNzZXRzL3Bob3RvZ3JhcGhlcnMvJHt0aGlzLl9wb3J0cmFpdH1gO1xuXHR9XG5cblx0Z2V0IGNhcmRQaG90b2dyYXBoZXIoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2NhcmRQaG90b2dyYXBoZXI7XG5cdH1cblxuXHRnZXQgY2FyZFBvcnRmb2xpbygpIHtcblx0XHRyZXR1cm4gdGhpcy5fY2FyZFBvcnRmb2xpbztcblx0fVxuXHRnZXQgY2FyZE1vZGFsKCkge1xuXHRcdHJldHVybiB0aGlzLl9jYXJkTW9kYWw7XG5cdH1cblxuXHRnZXQgY2FyZEZpbHRlcigpIHtcblx0XHRyZXR1cm4gdGhpcy5fY2FyZEZpbHRlcjtcblx0fVxuXG5cdGdldCBwb3J0Zm9saW8oKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3BvcnRmb2xpbztcblx0fVxuXG5cdGdldCBjYXJkUGhvdG9ncmFwaGVyKCkge1xuXHRcdHJldHVybiB0aGlzLl9jYXJkUGhvdG9ncmFwaGVyO1xuXHR9XG5cblx0Z2V0IGNhcmRQb3J0Zm9saW8oKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2NhcmRQb3J0Zm9saW87XG5cdH1cblxuXG5cblx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHNldHRlcnMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHRzZXQgcG9ydGZvbGlvKG1lZGlhcykge1xuXHRcdHRoaXMuX3BvcnRmb2xpbyA9IG1lZGlhcztcblx0fVxuXG5cdHNldCBjYXJkUGhvdG9ncmFwaGVyKGNhcmQpIHtcblx0XHR0aGlzLl90ZW1wbGF0ZVBob3RvZ3JhcGhlciA9IGNhcmQ7XG5cdH1cblxuXHRzZXQgY2FyZFBvcnRmb2xpbyhjYXJkKSB7XG5cdFx0dGhpcy5fY2FyZFBvcnRmb2xpbyA9IGNhcmQ7XG5cdH1cblxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWFDYXJkSGVhZGVyIHtcblx0Y29uc3RydWN0b3IocGhvdG9ncmFwaGVyKSB7XG5cdFx0dGhpcy5fcGhvdG9ncmFwaGVyID0gcGhvdG9ncmFwaGVyXG5cblx0XHR0aGlzLl93cmFwcGVySGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcblx0XHR0aGlzLl93cmFwcGVySGVhZGVyLmNsYXNzTGlzdC5hZGQoJ21lZGlhLWNhcmQtd3JhcHBlcicpXG5cdFx0dGhpcy5fd3JhcHBlckNvbnRhY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuXHRcdHRoaXMuX3dyYXBwZXJDb250YWN0LmNsYXNzTGlzdC5hZGQoJ2NvbnRhY3QtY2FyZC13cmFwcGVyJylcblxuXHR9XG5cblx0Z2V0IHBob3RvZ3JhcGhlcigpIHtcblx0XHRyZXR1cm4gdGhpcy5fcGhvdG9ncmFwaGVyXG5cdH1cblxuXHRjcmVhdGVNZWRpYUNhcmRIZWFkZXIoKSB7XG5cdFx0Y29uc3QgTWVkaWFDYXJkID0gYFxuICAgIDxkaXYgY2xhc3M9XCJpbmZvLXNlY3Rpb25cIj5cbiAgICAgIDxoMT4ke3RoaXMuX3Bob3RvZ3JhcGhlci5uYW1lfTwvaDE+XG4gICAgICA8cCBjbGFzcz1cImxvY2FsLWhlYWRlclwiPiR7dGhpcy5fcGhvdG9ncmFwaGVyLmNpdHl9LCAke3RoaXMuX3Bob3RvZ3JhcGhlci5jb3VudHJ5fTwvcD5cbiAgICAgIDxwIGNsYXNzPVwidGFnbGluZS1oZWFkZXJcIj4ke3RoaXMuX3Bob3RvZ3JhcGhlci50YWdsaW5lfTwvcD5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLXNlY3Rpb25cIj5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJjb250YWN0X2J1dHRvblwiIGFyaWEtbGFiZWw9XCJjb250YWN0IG1lXCI+Q29udGFjdGV6LW1vaTwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJpbWFnZS1oZWFkZXItc2VjdGlvblwiPlxuICAgICAgPGltZyBjbGFzcz1cImltZy1oZWFkZXJcIiBzcmM9XCIke3RoaXMuX3Bob3RvZ3JhcGhlci5wb3J0cmFpdH1cIiBhbHQ9XCIke3RoaXMuX3Bob3RvZ3JhcGhlci5uYW1lfVwiPlxuICAgIDwvZGl2PmBcblxuXHRcdHRoaXMuX3dyYXBwZXJIZWFkZXIuaW5uZXJIVE1MID0gTWVkaWFDYXJkXG5cblx0XHRyZXR1cm4gdGhpcy5fd3JhcHBlckhlYWRlclxuXHR9XG5cblx0Y3JlYXRlQ29udGFjdENhcmQoKSB7XG5cblx0XHRjb25zdCBjb250YWN0Q2FyZCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwibW9kYWxcIj5cbiAgICA8aGVhZGVyPlxuICAgICAgPGgyPkNvbnRhY3Rlei1tb2kgJHt0aGlzLl9waG90b2dyYXBoZXIubmFtZX08L2gyPlxuICAgICAgPGltZyBzcmM9XCIuLi9hc3NldHMvaWNvbnMvY2xvc2Uuc3ZnXCIgY2xhc3M9XCJidG5DbG9zZVwiIGFsdD1cIkNsb3NlXCIvPlxuICAgIDwvaGVhZGVyPlxuICAgIDxmb3JtPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGZvcj1cImZpcnN0bmFtZVwiIHR5cGU9XCJ0ZXh0XCI+UHLDqW5vbTwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwiZmlyc3RuYW1lXCIgbmFtZT1cImZpcnN0bmFtZVwiLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGZvcj1cImxhc3RuYW1lXCIgdHlwZT1cInRleHRcIj5Ob208L2xhYmVsPlxuICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBpZD1cImxhc3RuYW1lXCIgbmFtZT1cImxhc3RuYW1lXCIvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgZm9yPVwiZW1haWxcIiB0eXBlPVwiZW1haWxcIj5FbWFpbDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwiZW1haWxcIiBpZD1cImVtYWlsXCIgbmFtZT1cImVtYWlsXCIvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWwgZm9yPVwidGV4dFwiIHR5cGU9XCJ0ZXh0XCI+Vm90cmUgbWVzc2FnZTwvbGFiZWw+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwidGV4dFwiIG5hbWU9XCJ0ZXh0XCIvPlxuICAgICAgPC9kaXY+XG4gICAgICA8YnV0dG9uIGNsYXNzPVwiY29udGFjdF9idXR0b25cIj5FbnZveWVyPC9idXR0b24+XG4gICAgPC9mb3JtPlxuICA8L2Rpdj5cbiAgICBcbiAgICBgXG4gICAgdGhpcy5fd3JhcHBlckNvbnRhY3QuaW5uZXJIVE1MID0gY29udGFjdENhcmRcbiAgICByZXR1cm4gdGhpcy5fd3JhcHBlckNvbnRhY3Rcblx0fVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWFDYXJkSW1nVmlkIHtcblx0Y29uc3RydWN0b3IobWVkaWEpIHtcblx0XHR0aGlzLl9tZWRpYSA9IG1lZGlhO1xuXHRcdHRoaXMuJHdyYXBwZXJDYXJkID0gbnVsbDtcblx0XHR0aGlzLiR3cmFwcGVyU3RpY2t5ID0gbnVsbDtcblx0fVxuXG5cdGdldCBtZWRpYUh0bWxFbGVtZW50KCkge1xuXHRcdHJldHVybiB0aGlzLiR3cmFwcGVyQ2FyZDtcblx0fVxuXG5cdC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGZvbmN0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Y3JlYXRlQ2FyZE1lZGlhKG1lZGlhKSB7XG5cdFx0dGhpcy4kd3JhcHBlckNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXHRcdHRoaXMuJHdyYXBwZXJDYXJkLmNsYXNzTGlzdC5hZGQoXCJtZWRpYS1jYXJkXCIpO1xuXHRcdHRoaXMuJHdyYXBwZXJDYXJkLmNsYXNzTGlzdC5hZGQoYG1lZGlhLWNhcmQtLSR7dGhpcy5fbWVkaWEudHlwZX1gKTtcblxuXHRcdC8vIGNvbnNvbGUubG9nKHRoaXMuX21lZGlhKVxuXG5cdFx0Y29uc3QgY2FyZCA9IGAgICAgICAgICBcbiAgICAgIDxhIGhyZWY9XCIke3RoaXMuX21lZGlhLnBhdGh9XCIgY2xhc3M9XCJtZWRpYS1jYXJkLWNvdmVyXCIgYXJpYS1sYWJlbD1cIiR7dGhpcy5fbWVkaWEuZGVzY3JpcHRpb259LCBhZ3JhbmRpciBsJ2ltYWdlXCI+ICAgICAgICAgIFxuICAgICAgICA8JHt0aGlzLl9tZWRpYS5mb3JtYXR9IHNyYz1cIiR7dGhpcy5fbWVkaWEucGF0aH1cIiBhbHQ9XCIke3RoaXMuX21lZGlhLmRlc2NyaXB0aW9ufSwgJHt0aGlzLl9tZWRpYS50eXBlfVwiLz5cbiAgICAgIDwvYT4gXG4gICAgICA8ZGl2IGNsYXNzPVwibWVkaWEtY2FyZC1jb250ZW50XCI+XG4gICAgICAgIDxoMiBjbGFzcz1cIm1lZGlhLWNhcmQtY29udGVudC10aXRsZVwiIHRhYmluZGV4PVwiMFwiPiR7dGhpcy5fbWVkaWEudGl0bGV9PC9oMj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1lZGlhLWNhcmQtY29udGVudC1saWtlIGZhdm9yaXRlXCI+XG4gICAgICAgICAgPGxhYmVsIGlkPVwibGlrZS0ke3RoaXMuX21lZGlhLmlkfVwiIGZvcj1cImxpa2UtJHt0aGlzLl9tZWRpYS5pZH0taW5wdXRcIiBjbGFzcz1cImZhdm9yaXRlLWNvdW50ZXJcIj4ke3RoaXMuX21lZGlhLmxpa2VzfSA8L2xhYmVsPlxuICAgICAgICAgIDxzcGFuPjxpIGNsYXNzPVwiZmEgZmEtc29saWQgZmEtaGVhcnQgZmEtc21cIiBhcmlhbC1sYWJlbD1cImxpa2VzXCI+PC9pPjwvc3Bhbj5cbiAgICAgICAgICA8aW5wdXQgaWQ9XCJsaWtlLSR7dGhpcy5fbWVkaWEuaWR9LWlucHV0XCIgYXJpYS1sYWJlbD1cIiR7dGhpcy5fbWVkaWEubGlrZXN9IGonYWltZXNcIiBjbGFzcz1cImZhdm9yaXRlLWlucHV0XCIgdHlwZT1cImNoZWNrYm94XCIvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIGA7XG5cdFx0dGhpcy4kd3JhcHBlckNhcmQuaW5uZXJIVE1MID0gY2FyZDtcblx0XHRyZXR1cm4gdGhpcy4kd3JhcHBlckNhcmQ7XG5cdH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBob3RvZ3JhcGhlckNhcmQge1xuICBjb25zdHJ1Y3RvcihwaG90b2dyYXBoZXIpIHtcblxuICAgICAgdGhpcy5fcGhvdG9ncmFwaGVyID0gcGhvdG9ncmFwaGVyXG5cbiAgICAgIHRoaXMuX3dyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgdGhpcy5fd3JhcHBlci5jbGFzc0xpc3QuYWRkKCdwaG90b2dyYXBoZXItY2FyZC13cmFwcGVyJylcbiAgfVxuXG4gIGdldCBwaG90b2dyYXBoZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcGhvdG9ncmFwaGVyXG4gIH1cblxuICBjcmVhdGVQaG90b2dyYXBoZXJDYXJkKCkge1xuICAgIGNvbnN0IHBob3RvZ3JhcGhlckNhcmQgPSBgXG4gICAgICA8YXJ0aWNsZT5cbiAgICAgICAgPGEgaHJlZj1cInBob3RvZ3JhcGhlci5odG1sP2lkPSR7dGhpcy5fcGhvdG9ncmFwaGVyLmlkfVwiIGlkPVwiJHt0aGlzLl9waG90b2dyYXBoZXIuaWR9XCIgY2xhc3M9XCJsaW5rXCIgYWx0PVwicGFnZSBkZSAke3RoaXMuX3Bob3RvZ3JhcGhlci5uYW1lfVwiPlxuICAgICAgICAgIDxpbWcgc3JjPVwiJHt0aGlzLl9waG90b2dyYXBoZXIucG9ydHJhaXR9XCIgYWx0PVwiJHt0aGlzLl9waG90b2dyYXBoZXIubmFtZX1cIiBjbGFzcz1cImltYWdlXCI+XG4gICAgICAgICAgPGgyPiR7dGhpcy5fcGhvdG9ncmFwaGVyLm5hbWV9PC9oMj5cbiAgICAgICAgPHAgY2xhc3M9XCJsb2NhdGlvblwiPiR7dGhpcy5fcGhvdG9ncmFwaGVyLmNpdHl9LCAke3RoaXMuX3Bob3RvZ3JhcGhlci5jb3VudHJ5fTwvcD5cbiAgICAgICAgPHAgY2xhc3M9XCJzbG9nYW5cIj4ke3RoaXMuX3Bob3RvZ3JhcGhlci50YWdsaW5lfTwvcD5cbiAgICAgICAgPHAgY2xhc3M9XCJwcmljZVwiPiR7dGhpcy5fcGhvdG9ncmFwaGVyLnByaWNlfeKCrC9qb3VyPC9wPlxuICAgICAgICA8L2E+ICBcbiAgICAgIDwvYXJ0aWNsZT5cbiAgICAgIGBcbiAgICAgIFxuICAgICAgdGhpcy5fd3JhcHBlci5pbm5lckhUTUwgPSBwaG90b2dyYXBoZXJDYXJkXG5cbiAgICAgIHJldHVybiB0aGlzLl93cmFwcGVyXG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBNZWRpYUNhcmRTdGlja3kge1xuXHRjb25zdHJ1Y3RvcihwaG90b2dyYXBoZXIsIG1lZGlhKSB7XG5cdFx0dGhpcy5fcGhvdG9ncmFwaGVyID0gcGhvdG9ncmFwaGVyO1xuXHRcdHRoaXMuX21lZGlhID0gbWVkaWE7XG5cdH1cblxuXHRnZXQgcGhvdG9ncmFwaGVyKCkge1xuXHRcdHJldHVybiB0aGlzLl9waG90b2dyYXBoZXI7XG5cdH1cblxuXHRnZXQgbWVkaWEoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX21lZGlhO1xuXHR9XG5cblx0Y3JlYXRlQ2FyZFN0aWNreShwaG90b2dyYXBoZXIsIG1lZGlhKSB7XG5cdFx0dGhpcy4kd3JhcHBlclN0aWNreSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0dGhpcy4kd3JhcHBlclN0aWNreS5jbGFzc0xpc3QuYWRkKFwic3RpY2t5LWNhcmRcIik7XG5cblx0XHRjb25zb2xlLmxvZyh0aGlzLl9tZWRpYSk7XG5cblx0XHRjb25zdCBzdGlja3lDYXJkID0gYFxuICAgIDxzcGFuIGNsYXNzPVwiZ2xvYmFsTGlrZXNcIj4ke3RoaXMuX21lZGlhLmdsb2JhbExpa2VzfTwvc3Bhbj5cbiAgICA8c3Bhbj48aSBjbGFzcz1cImZhIGZhLXNvbGlkIGZhLWhlYXJ0IGZhLXNtXCIgYXJpYWwtbGFiZWw9XCJsaWtlc1wiPjwvaT48L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9XCJwcmljZVwiPiR7dGhpcy5fcGhvdG9ncmFwaGVyLnByaWNlfeKCrCAvIGpvdXI8L3NwYW4+XG4gICAgYDtcblx0XHR0aGlzLiR3cmFwcGVyU3RpY2t5LmlubmVySFRNTCA9IHN0aWNreUNhcmQ7XG5cdFx0cmV0dXJuIHRoaXMuJHdyYXBwZXJTdGlja3k7XG5cdH1cbn1cbiIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGltcG9ydHMgYXZlYyB3ZWJwYWNrIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbmltcG9ydCBBcGkgZnJvbSBcIi4uL2pzL2FwaS9BcGlcIjtcbmltcG9ydCBNZWRpYXNGYWN0b3J5IGZyb20gXCIuLi9qcy9mYWN0b3JpZXMvTWVkaWFzRmFjdG9yeVwiO1xuaW1wb3J0IE1lZGlhTW9kZWwgZnJvbSBcIi4uL2pzL01vZGVscy9NZWRpYU1vZGVsXCI7XG5pbXBvcnQgUGhvdG9ncmFwaGVyTW9kZWwgZnJvbSBcIi4uL2pzL01vZGVscy9QaG90b2dyYXBoZXJNb2RlbFwiO1xuaW1wb3J0IE1lZGlhQ2FyZEhlYWRlciBmcm9tIFwiLi4vanMvdGVtcGxhdGVzL01lZGlhQ2FyZEhlYWRlclwiO1xuaW1wb3J0IE1lZGlhQ2FyZEltZ1ZpZCBmcm9tIFwiLi4vanMvdGVtcGxhdGVzL01lZGlhQ2FyZEltZ1ZpZFwiO1xuaW1wb3J0IFBob3RvZ3JhcGhlckNhcmQgZnJvbSBcIi4uL2pzL3RlbXBsYXRlcy9QaG90b2dyYXBoZXJDYXJkXCI7XG5pbXBvcnQgTWVkaWFDYXJkU3RpY2t5IGZyb20gXCIuLi9qcy90ZW1wbGF0ZXMvTWVkaWFDYXJkU3RpY2t5XCI7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBmb25jdGlvbiBJbml0IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbmluaXQoKTtcbmFzeW5jIGZ1bmN0aW9uIGluaXQoKSB7XG5cdGNvbnN0ICRwaG90b2dyYXBoZXJzV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGhvdG9ncmFwaGVyX3dyYXBwZXJcIik7XG5cdGNvbnN0ICRtZWRpYXNXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxcIik7XG5cdGNvbnN0ICRtZWRpYUNvbnRhY3RXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb250YWN0X21vZGFsXCIpO1xuXHRjb25zdCAkcG9ydGZvbGlvV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9ydGZvbGlvXCIpO1xuXHRjb25zdCAkc3RpY2t5V3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3RpY2t5XCIpO1xuXG5cdC8qIC0tLS0tLS0tLS0tLS0tLSBpZiBzaSBvbiBzZSB0cm91dmUgc3VyIGxhIHBhZ2UgZCdhY2N1ZWlsIC0tLS0tLS0tLS0tLS0tICovXG5cblx0aWYgKCRwaG90b2dyYXBoZXJzV3JhcHBlcikge1xuXHRcdC8vIEluc3RhbmNlIGRlIGxhIENsYXNzIEFQSVxuXHRcdGNvbnN0IGRhdGEgPSBuZXcgQXBpKFwiLi4vZGF0YS9waG90b2dyYXBoZXJzLmpzb25cIik7XG5cblx0XHQvLyBSw6ljdXDDqHJlIGxlcyBkYXRhcyBkZXMgcGhvdG9ncmFwaGVzXG5cdFx0Y29uc3QgcGhvdG9ncmFwaGVycyA9IGF3YWl0IGRhdGEuZ2V0UGhvdG9ncmFwaGVycygpO1xuXHRcdGNvbnN0IGFyclBob3RvZ3JhcGhlcnMgPSBbXTtcblxuXHRcdC8vIENyw6lhdGlvbiBkZXMgb2JqZXRzIHBob3RvZ3JhcGhlciBldCBpbnNlcnRpb24gZGFucyB1biB0YWJsZWF1XG5cdFx0cGhvdG9ncmFwaGVycy5mb3JFYWNoKChkYXRhKSA9PiB7XG5cdFx0XHRjb25zdCBwaG90b2dyYXBoZXIgPSBuZXcgUGhvdG9ncmFwaGVyTW9kZWwoZGF0YSk7XG5cdFx0XHRhcnJQaG90b2dyYXBoZXJzLnB1c2gocGhvdG9ncmFwaGVyKTtcblx0XHR9KTtcblxuXHRcdC8vIENyZWF0aW9uIGRlcyBDYXJkIGV0IGluc2VydGlvbiBkYW5zIGxlIERPTVxuXHRcdGFyclBob3RvZ3JhcGhlcnMuZm9yRWFjaCgocGhvdG9ncmFwaGVyKSA9PiB7XG5cdFx0XHRjb25zdCBwaG90b2dyYXBoZXJDYXJkID0gbmV3IFBob3RvZ3JhcGhlckNhcmQocGhvdG9ncmFwaGVyKTtcblx0XHRcdCRwaG90b2dyYXBoZXJzV3JhcHBlci5hcHBlbmRDaGlsZChcblx0XHRcdFx0cGhvdG9ncmFwaGVyQ2FyZC5jcmVhdGVQaG90b2dyYXBoZXJDYXJkKClcblx0XHRcdCk7XG5cdFx0fSk7XG5cblx0XHQvKiAtLS0tLS0tIGVsc2Ugc2kgamFtYWlzIG9uIHNlIHRyb3V2ZSBzdXIgbGEgcGFnZSBkJ3VuIHBob3RvZ3JhcGhlIC0tLS0tLSAqL1xuXHR9IGVsc2Uge1xuXHRcdC8vIEluc3RhbmNlIGRlIGxhIENsYXNzIEFQSVxuXHRcdGNvbnN0IGRhdGEgPSBuZXcgQXBpKFwiLi4vZGF0YS9waG90b2dyYXBoZXJzLmpzb25cIik7XG5cblx0XHQvLyBSZWN1cMOpcmF0aW9uIHBhcmFtw6h0cmVzIHVybFxuXHRcdGNvbnN0IHVybCA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2g7XG5cdFx0Y29uc3Qgc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh1cmwpO1xuXHRcdGNvbnN0IHVzZXJJZCA9IHBhcnNlSW50KHNlYXJjaFBhcmFtcy5nZXQoXCJpZFwiKSk7XG5cblx0XHQvLyBSw6ljdXDDqHJlIGxlcyBkYXRhcyBkZXMgcGhvdG9ncmFwaGVzXG5cdFx0Y29uc3QgcGhvdG9ncmFwaGVyRGF0YSA9IGF3YWl0IGRhdGEuZ2V0UGhvdG9ncmFwaGVyQnlJZCh1c2VySWQpO1xuXHRcdGNvbnN0IHBvcnRmb2xpb0RhdGEgPSBhd2FpdCBkYXRhLmdldFBvcnRmb2xpb0J5VXNlcklkKHVzZXJJZCk7XG5cblx0XHQvLyBMaXN0ZSBkZXMgbcOpZGlhcyBkdSBwaG90b2dyYWhlXG5cdFx0Y29uc3QgQWxsTWVkaWFzID0gcG9ydGZvbGlvRGF0YS5tYXAoKG1lZGlhKSA9PiBuZXcgTWVkaWFzRmFjdG9yeShtZWRpYSkpO1xuXG5cdFx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0gQ3JlYXRpb24gZGUgbCdvYmpldCBwaG90b2dyYXBoZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHRcdGNvbnN0IHBob3RvZ3JhcGhlciA9IG5ldyBQaG90b2dyYXBoZXJNb2RlbChwaG90b2dyYXBoZXJEYXRhKTtcblxuXHRcdHBob3RvZ3JhcGhlci5oZWFkZXJNZWRpYUNhcmQgPSBuZXcgTWVkaWFDYXJkSGVhZGVyKHBob3RvZ3JhcGhlcik7XG5cblx0XHQvLyBJbnNlcnRpb24gZGVzIGVsZW1lbnQgZGFucyBsZSBET01cblx0XHQkbWVkaWFzV3JhcHBlci5hcHBlbmRDaGlsZChcblx0XHRcdHBob3RvZ3JhcGhlci5oZWFkZXJNZWRpYUNhcmQuY3JlYXRlTWVkaWFDYXJkSGVhZGVyKClcblx0XHQpO1xuXG5cdFx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIENyZWF0aW9uIGRlIGwnb2JqZXQgbWVkaWEgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHRcdGNvbnN0IG1lZGlhID0gbmV3IE1lZGlhTW9kZWwoQWxsTWVkaWFzKTtcblxuXHRcdEFsbE1lZGlhcy5mb3JFYWNoKChtZWRpYSkgPT4ge1xuXHRcdFx0Ly8gY29uc29sZS5sb2cobWVkaWEuaW1hZ2UpXG5cdFx0XHRjb25zdCBUZW1wbGF0ZSA9IG5ldyBNZWRpYUNhcmRJbWdWaWQobWVkaWEpO1xuXHRcdFx0JHBvcnRmb2xpb1dyYXBwZXIuYXBwZW5kQ2hpbGQoVGVtcGxhdGUuY3JlYXRlQ2FyZE1lZGlhKCkpO1xuXHRcdH0pO1xuXG5cdFx0JG1lZGlhQ29udGFjdFdyYXBwZXIuYXBwZW5kQ2hpbGQoXG5cdFx0XHRwaG90b2dyYXBoZXIuaGVhZGVyTWVkaWFDYXJkLmNyZWF0ZUNvbnRhY3RDYXJkKClcblx0XHQpO1xuXG5cdFx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gY3LDqWF0aW9uIGRlIGxhIG1vZGFsIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0XHRjb25zdCAkbW9kYWxCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNvbnRhY3RfYnV0dG9uXCIpO1xuXHRcdGNvbnN0IG1vZGFsRGlzcGxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGFjdF9tb2RhbFwiKTtcblx0XHRjb25zdCBjbG9zZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idG5DbG9zZVwiKTtcblxuXHRcdCRtb2RhbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuXHRcdFx0bW9kYWxEaXNwbGF5LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG5cdFx0fSk7XG5cblx0XHRjbG9zZU1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG5cdFx0XHRtb2RhbERpc3BsYXkuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXHRcdH0pO1xuXG5cdFx0LyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBjcsOpYXRpb24gZGUgbGEgcGFydGllIHN0aWNreSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdFx0Y29uc3QgVGVtcGxhdGVTdGlja3kgPSBuZXcgTWVkaWFDYXJkU3RpY2t5KHBob3RvZ3JhcGhlciwgbWVkaWEpO1xuXHRcdCRzdGlja3lXcmFwcGVyLmFwcGVuZENoaWxkKFRlbXBsYXRlU3RpY2t5LmNyZWF0ZUNhcmRTdGlja3koKSk7XG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJBcGkiLCJjb25zdHJ1Y3RvciIsInVybCIsInRoaXMiLCJfdXJsIiwiYXN5bmMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJqc29uIiwicGhvdG9ncmFwaGVycyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsInVzZXJJZCIsInJlc3BvbnNlQXBpIiwiZmlsdGVyIiwicGhvdG9ncmFwaGVyIiwiaWQiLCJtZWRpYSIsInBob3RvZ3JhcGhlcklkIiwiTWVkaWFNb2RlbCIsImRhdGEiLCJfaWQiLCJfcGhvdG9ncmFwaGVySWQiLCJfdGl0bGUiLCJ0aXRsZSIsIl9saWtlcyIsImxpa2VzIiwiX2RhdGUiLCJkYXRlIiwiX3ByaWNlIiwicHJpY2UiLCJfZGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbiIsIl9nbG9iYWxMaWtlcyIsInBob3RvZ3JhcGhlSWQiLCJfcGhvdG9ncmFwaGVJZCIsImdsb2JhbExpa2VzIiwiUGljdHVyZSIsInN1cGVyIiwiX3R5cGUiLCJfaW1hZ2UiLCJpbWFnZSIsIl9pbWFnZVBhdGgiLCJfZm9ybWF0IiwiX2ljb24iLCJwYXRoIiwidHlwZSIsImljb24iLCJmb3JtYXQiLCJWaWRlbyIsIl92aWRlbyIsInZpZGVvIiwiX3ZpZGVvUGF0aCIsIk1lZGlhc0ZhY3RvcnkiLCJQaG90b2dyYXBoZXJNb2RlbCIsIl9uYW1lIiwibmFtZSIsIl9jaXR5IiwiY2l0eSIsIl9jb3VudHJ5IiwiY291bnRyeSIsIl90YWdsaW5lIiwidGFnbGluZSIsIl9wb3J0cmFpdCIsInBvcnRyYWl0IiwiX3BvcnRmb2xpbyIsIl9jYXJkUGhvdG9ncmFwaGVyIiwiX2NhcmRQb3J0Zm9saW8iLCJfY2FyZE1vZGFsIiwiX2NhcmRGaWx0ZXIiLCJjYXJkUGhvdG9ncmFwaGVyIiwiY2FyZFBvcnRmb2xpbyIsImNhcmRNb2RhbCIsImNhcmRGaWx0ZXIiLCJwb3J0Zm9saW8iLCJtZWRpYXMiLCJjYXJkIiwiX3RlbXBsYXRlUGhvdG9ncmFwaGVyIiwiTWVkaWFDYXJkSGVhZGVyIiwiX3Bob3RvZ3JhcGhlciIsIl93cmFwcGVySGVhZGVyIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiX3dyYXBwZXJDb250YWN0IiwiY3JlYXRlTWVkaWFDYXJkSGVhZGVyIiwiTWVkaWFDYXJkIiwiaW5uZXJIVE1MIiwiY3JlYXRlQ29udGFjdENhcmQiLCJjb250YWN0Q2FyZCIsIk1lZGlhQ2FyZEltZ1ZpZCIsIl9tZWRpYSIsIiR3cmFwcGVyQ2FyZCIsIiR3cmFwcGVyU3RpY2t5IiwibWVkaWFIdG1sRWxlbWVudCIsImNyZWF0ZUNhcmRNZWRpYSIsIlBob3RvZ3JhcGhlckNhcmQiLCJfd3JhcHBlciIsImNyZWF0ZVBob3RvZ3JhcGhlckNhcmQiLCJwaG90b2dyYXBoZXJDYXJkIiwiTWVkaWFDYXJkU3RpY2t5IiwiY3JlYXRlQ2FyZFN0aWNreSIsInN0aWNreUNhcmQiLCIkcGhvdG9ncmFwaGVyc1dyYXBwZXIiLCJxdWVyeVNlbGVjdG9yIiwiJG1lZGlhc1dyYXBwZXIiLCIkbWVkaWFDb250YWN0V3JhcHBlciIsIiRwb3J0Zm9saW9XcmFwcGVyIiwiJHN0aWNreVdyYXBwZXIiLCJnZXRQaG90b2dyYXBoZXJzIiwiYXJyUGhvdG9ncmFwaGVycyIsImZvckVhY2giLCJwdXNoIiwiYXBwZW5kQ2hpbGQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInNlYXJjaCIsInNlYXJjaFBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsInBhcnNlSW50IiwiZ2V0IiwicGhvdG9ncmFwaGVyRGF0YSIsImdldFBob3RvZ3JhcGhlckJ5SWQiLCJBbGxNZWRpYXMiLCJnZXRQb3J0Zm9saW9CeVVzZXJJZCIsIm1hcCIsImhlYWRlck1lZGlhQ2FyZCIsIlRlbXBsYXRlIiwiJG1vZGFsQnV0dG9uIiwibW9kYWxEaXNwbGF5IiwiY2xvc2VNb2RhbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdHlsZSIsImRpc3BsYXkiLCJUZW1wbGF0ZVN0aWNreSIsImluaXQiXSwic291cmNlUm9vdCI6IiJ9